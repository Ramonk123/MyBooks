@model MyBooks.Models.Library.LibraryIndexVM

<div class="container-fluid mt-4">
    <div class="row">
        <div class="col-md-3">
            @Html.Partial("Partials/_LibrarySidebarPartial", Model)
        </div>

        <div class="col-md-9">
            @Html.Partial("Partials/_LibraryBooksPartial", Model)
        </div>
    </div>
</div>

<div class="modal fade" id="createLibraryModal" tabindex="-1" role="dialog" aria-labelledby="createLibraryModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createLibraryModalLabel">Create Library</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="createLibraryForm">
                    <div class="form-group">
                        <label for="libraryName">Library Name</label>
                        <input type="text" class="form-control" id="libraryName" required>
                    </div>
                    <button id="add-library-btn"type="submit" class="btn btn-primary">Create</button>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="editLibraryModal" tabindex="-1" role="dialog" aria-labelledby="editLibraryModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editLibraryModalLabel">Edit Library</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="editLibraryForm">
                    <input type="hidden" id="editLibraryId" value="">
                    <div class="form-group">
                        <label for="editLibraryName">Library Name</label>
                        <input type="text" class="form-control" id="editLibraryName" required>
                    </div>
                    <button type="submit" class="btn btn-primary" onclick="editLibrary()">Save Changes</button>
                    <button type="submit" class="btn btn-danger" onclick="deleteLibrary()">Delete Library</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    function openCreateLibraryModal() {
        $('#createLibraryModal').modal('show');
        $('#add-library-btn').on('click', function(e) {
            e.preventDefault();
            submitCreateLibraryForm();
        });
    }

    function openEditLibraryModal(id) {
        $('#editLibraryId').val(id);
        $('#editLibraryModal').modal('show');
    }
    
    function editLibrary() {
        name = $('#editLibraryName').val();
        id = $('#editLibraryId').val();
        
        const options = {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(name)
        }
        
        fetch('Edit/' + id.toString(), options)
        .then(res => res.json())
        .then(data => {
            window.location.href = '/Library/Index';
        }).catch(err => console.log(err));
    }

    function deleteLibrary() {
        const id = $('#editLibraryId').val();

        const options = {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json'
            }
        };

        fetch(`Delete/${id}`, options)
            .then(res => res.json())
            .catch(err => console.log(err));
    }

    function openAddBookModal() {

    }

    function removeBook(bookId) {

    }
    
    function addLibrary() {

    }

    function submitCreateLibraryForm() {
        const name = $('#libraryName').val();

        fetch('Add', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ Name: name })
        })
            .then(res => {
                if (!res.ok) {
                    return res.json().then(err => {
                        throw new Error(err.Message.join(", "));
                    });
                }
                return res.json();
            })
            .then(data => {
                console.log(data);
                window.location.href = '/Library/Index';
            })
            .catch(err => alert(err.message));
    }

</script>

<style>
    .card {
        border-radius: 0.75rem;
        background-color: #f8f9fa;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .list-group-item {
        border: none;
        padding: 1.5rem;
        margin: 0.2em 0 0.2em 0;
        transition: background-color 0.3s ease;
        border-radius: 0.5rem;
        background-color: #ffffff;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .list-group-item:hover {
        background-color: #f1f3f5;
    }

    .list-group-item .btn {
        margin-left: 0.5rem;
    }

    .modal-content {
        border-radius: 0.5rem;
    }

    .btn {
        border-radius: 0.3rem;
    }

    .ml-auto {
        margin-left: auto;
    }
</style>