@model MyBooks.Models.Library.LibraryIndexVM

<div class="container-fluid mt-4">
    <div class="row">
        <div class="col-md-3">
            @Html.Partial("Partials/_LibrarySidebarPartial", Model.Libraries)
        </div>

        <div class="col-md-9 books">
            @Html.Partial("Partials/_LibraryBooksPartial", Model.Library)
        </div>
    </div>
</div>

<div class="add-library-modal"></div>
<div class="edit-library-modal"></div>


<script>
    $(document).ready(() => {
        $('.library-button').click(function() {
            const id = $(this).attr('id');
            const options = {
                method: 'GET',
                headers: {
                    'Content-Type': 'text/html'
                }
            }
            fetch('Library/GetLibrary/' + id, options)
                .then(res => res.text())
                .then(data => {
                    $('.books').html(data);
                })
        })
    })
    function openCreateLibraryModal() {
        
        const options = {
            method: 'GET',
            headers: {
                'Content-Type': 'text/html'
            }    
        }
        fetch('Library/Add', options)
            .then(res => res.text())
            .then(data => {
                $('.add-library-modal').html(data);
                $('#addLibraryModal').modal('toggle');
            }).then(() => {
                $('#add-library-btn').click(submitCreateLibraryForm);
            })
    }

    function openEditLibraryModal(id) {

        const options = {
            method: 'GET',
            headers: {
                'Content-Type': 'text/html'
            }
        }
        
        fetch('Library/Edit/' + id, options)
            .then(res => res.text())
            .then(data => {
                $('.edit-library-modal').html(data);
                $('#editLibraryModal').modal('toggle');
            }).then(() => addEditLibraryEventListeners());
    }
    
    function addEditLibraryEventListeners() {
        const editLibrarySubmit = $('#edit-library-submit');
        const deleteLibrarySubmit = $('#delete-library-submit');
        
        editLibrarySubmit.on('click', editLibrary);
        deleteLibrarySubmit.on('click', deleteLibrary);

    }
    
    function addLibraryToView(id, name) {
        $('#addLibraryModal').modal('hide');
     
        const libraryDiv = $(".libraries");
        libraryDiv.append(`<a id="${id}" href="#" class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">${name}</a>`);
        
    }
    
    function editLibrary() {
        name = $('#editLibraryName').val();
        id = $('#editLibraryId').val();
        
        const options = {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(name)
        }
        
        fetch('Library/Edit/' + id.toString(), options)
        .then(res => res.json())
        .then(data => {
            $('#editLibraryModal').modal('hide');
            $(`#${id}`).text(data.name);
        })
        .catch(err => console.log(err));
    }

    function deleteLibrary() {
        const id = $('#editLibraryId').val();

        const options = {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json'
            }
        };

        fetch(`Library/Delete/${id}`, options)
            .catch(err => console.log(err));
    }
    
    function submitCreateLibraryForm() {
        const name = $('#libraryName').val();

        fetch('/Library/Add', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(name)
        })
            .then(res => res.json())
            .then(data => addLibraryToView(data.id, data.name))
            .catch(err => console.log(err));    
    }


</script>

<style>
    .card {
        border-radius: 0.75rem;
        background-color: #f8f9fa;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .list-group-item {
        border: none;
        padding: 1.5rem;
        margin: 0.2em 0 0.2em 0;
        transition: background-color 0.3s ease;
        border-radius: 0.5rem;
        background-color: #ffffff;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .list-group-item:hover {
        background-color: #f1f3f5;
    }

    .list-group-item .btn {
        margin-left: 0.5rem;
    }

    .modal-content {
        border-radius: 0.5rem;
    }

    .btn {
        border-radius: 0.3rem;
    }

    .ml-auto {
        margin-left: auto;
    }
</style>