@{
    var query = ViewBag.Query as string;
    ViewData["HideSearchbar"] = true;
}

<div class="search-container mt-5 input-group form-control">
    <input type="text" id="search-book-input" class="form-control search-input" placeholder="Search for a book..." onchange="searchBook()">
    <div class="input-group-append">
        <button type="button" id="search-book-button" class="form-control btn btn-primary" onclick="searchBook($('#search-book-input').val())">Search</button>
    </div>
</div>
<div class="results mt-4"> </div>


<script>
    $(document).ready(function () {
        $('#search-book-input').on('input', handleInput);

        const query = '@query';
        if (query) {
            $('#search-book-input').val(query);
            searchBook(query);
        }
    });

    let bookList = [];
    let debounceTimeout = null;

    function handleInput(event) {
        const searchValue = $('#search-book-input').val();

        if (event.key === 'Backspace' || event.key === 'ArrowLeft' || event.key === 'ArrowRight') {
            return;
        }

        if (searchValue.length === 0) {
            emptyBookList();
            return;
        }

        clearTimeout(debounceTimeout);
        debounceTimeout = setTimeout(() => searchBook(searchValue), 300);
    }

    function searchBook(query) {
        const searchValue = query || $('#search-book-input').val();
        if (searchValue.length === 0) {
            emptyBookList();
            return;
        }
        
        fetch('Books/Search/' + searchValue)
            .then(res => res.json())
            .then(data => processSearchResults(data))
            .catch(err => {
                const results = $('.results');
                results.empty();
                results.append('<p>No books found.</p>');
            });
    }
    
    function processSearchResults(data) {
        const existingBookIds = new Set(bookList.map(book => book.bookId));

        data.forEach(book => {
            if (!existingBookIds.has(book.bookId)) {
                bookList.push(book);
            }
        });

        updateDOM();
    }

    function updateDOM() {
        const results = $('.results');
        results.empty();

        bookList.forEach(book => {
            const card = $('<div class="card d-flex flex-column"></div>').data('book-id', book.bookId);

            const headerContainer = $('<div class="header-container d-flex justify-content-between align-items-center"></div>');
            const title = $(`<h2 class="book-title">${book.title}</h2>`);
            const detailsButton = $(`<a class="btn btn-outline-secondary" href="/Books/Details/${book.bookId}">See more</a>`);
            headerContainer.append(title).append(detailsButton);

            const contentContainer = $('<div class="content-container d-flex"></div>');

            const thumbnail = book.thumbnailURL
                ? `<img src="${book.thumbnailURL}" alt="${book.title} thumbnail" class="book-thumbnail" loading="lazy" onerror="this.onerror=null;this.src='/img/book-placeholder.jpg';">`
                : '<img src="/img/book-placeholder.jpg" alt="placeholder image" class="book-thumbnail">';
                
            const averageRating = book.averageRating || "N/A";
            const releaseYear = book.releaseYear || "Unknown";
            const subtitle = book.subtitle || "";
            const description = book.description ? book.description.substring(0, 150) + "..." : "No description available.";

            const textContainer = $('<div class="text-container"></div>');
            const subtitleElement = subtitle ? $(`<h3 class="book-subtitle">${subtitle}</h3>`) : '';
            const author = $(`<p class="book-author">By: ${book.author}</p>`);
            const releaseYearElement = $(`<p class="release-year">Published: ${releaseYear}</p>`);
            const rating = $(`<p class="book-rating">Rating: ${averageRating}</p>`);
            const descriptionElement = $(`<p class="book-description">${description}</p>`);

            if (subtitleElement) textContainer.append(subtitleElement);
            textContainer.append(author);
            textContainer.append(releaseYearElement);
            textContainer.append(rating);
            textContainer.append(descriptionElement);

            contentContainer.append(thumbnail);
            contentContainer.append(textContainer);

            card.append(headerContainer);
            card.append(contentContainer);
            results.append(card);
        });
    }

    function emptyBookList() {
        bookList = [];
        updateDOM();
    }
</script>

<style>
    
    .search-container {
        max-width: 800px;
        justify-content: center;
    }
    .results {
        display: flex;
        flex-direction: column;
        gap: 20px;
        max-width: 800px;
        margin: 20px auto;
    }

    .card {
        display: flex;
        flex-direction: column;
        padding: 20px;
        border: 1px solid #ddd;
        border-radius: 10px;
        background-color: #ffffff;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
        transition: transform 0.2s ease, box-shadow 0.2s ease;
        overflow: hidden;
    }

    .card:hover {
        transform: translateY(-4px);
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
    }

    .book-thumbnail {
        width: 120px;
        height: 180px;
        object-fit: cover;
        border-radius: 4px;
        margin-right: 20px;
    }

    .header-container {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 15px;
    }

    .content-container {
        display: flex;
    }

    .text-container {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .book-title {
        font-size: 20px;
        font-weight: bold;
        margin: 0;
        color: #333;
    }

    .book-subtitle {
        font-size: 16px;
        font-weight: normal;
        color: #777;
        margin-bottom: 10px;
    }

    .book-author {
        font-size: 14px;
        color: #555;
        margin-bottom: 5px;
    }

    .release-year {
        font-size: 12px;
        color: #999;
        margin-bottom: 5px;
    }

    .book-rating {
        font-size: 14px;
        font-weight: bold;
        color: #444;
        margin-bottom: 5px;
    }

    .book-description {
        font-size: 14px;
        color: #666;
        line-height: 1.5;
        margin-top: 10px;
    }

    .btn-outline-secondary {
        color: #007bff;
        border-color: #007bff;
        transition: background-color 0.3s ease, color 0.3s ease;
    }

    .btn-outline-secondary:hover {
        background-color: #007bff;
        color: #fff;
    }
</style>